name: Build and Test

on: 
  push:

  release:
    types: [published]

  workflow_dispatch:

env:
  # Any call to install method of SystemPackageTool helper should modify the system packages
  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"

jobs:
  build-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        env:
          cache-name: cache-conan-modules
        with:
          path: |
            ${{ env.CONAN_USER_HOME }}
            ~/.cache/pip
          key: ${{ runner.os }}-${{ hashFiles('CMakeLists.txt') }}-${{ hashFiles('conanfile.txt') }}

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.7

      - name: Install Conan
        run: pip install conan --upgrade && conan --version

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.25.2'

      - name: Build 
        run: ./build.sh

      - name: Artifact (with permissions)
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build
          key: build-folder-artifact-${{ runner.os }}-${{ github.run_id }}-${{ github.run_number }}


  test-matrix:
    needs: build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        env:
          cache-name: cache-conan-modules
        with:
          path: |
            ${{ env.CONAN_USER_HOME }}
            ~/.cache/pip
          key: ${{ runner.os }}-${{ hashFiles('CMakeLists.txt') }}-${{ hashFiles('conanfile.txt') }}

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.7

      - name: Install Conan
        run: pip install conan --upgrade && conan --version

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.25.2'

      - name: Artifact (with permissions)
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build
          key: build-folder-artifact-${{ runner.os }}-${{ github.run_id }}-${{ github.run_number }}

      - name: Test
        working-directory: build
        # https://cmake.org/cmake/help/latest/manual/ctest.1.html
        run: |
            ctest  -C Debug

  build:
    needs: [build-matrix, test-matrix]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get macOS binaries
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build
          key: build-folder-artifact-macOS-${{ github.run_id }}-${{ github.run_number }}

      - name: Prepare macOS binaries
        run: |
          cp ${{ github.workspace }}/build/bin/md5* ${{ github.workspace }}/md5_macOS
          rm -rf ${{ github.workspace }}/build

      - name: Get Linux binaries
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build
          key: build-folder-artifact-Linux-${{ github.run_id }}-${{ github.run_number }}

      - name: Prepare Linux binaries
        run: |
          cp ${{ github.workspace }}/build/bin/md5* ${{ github.workspace }}/md5_Linux
          rm -rf ${{ github.workspace }}/build

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body: New Release"
          files: |
            ${{ github.workspace }}/md5_Linux
            ${{ github.workspace }}/md5_macOS
